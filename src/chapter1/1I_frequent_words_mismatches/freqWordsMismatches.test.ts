import { freqWordsMistaches } from "./freqWordsMismatches";

describe("1I: Find the Most Frequent Words with Mismatches in a String", () => {
  test("Rosalind Sample Dataset", () => {
    const text = "ACGTTGCATGTCGCATGATGCATGAGAGCT";
    const k = 4;
    const d = 1;
    const freq = freqWordsMistaches(text, k, d);
    const expAns = "GATG ATGC ATGT";
    const test = expAns.split(" ");
    expect(freq.size).toBe(3);
    test.forEach((s) => freq.delete(s));
    // if they match (in any order) => freq has size 0
    expect(freq.size).toBe(0);
  });

  test("Rosalind Extra Dataset", () => {
    const text =
      "CACAGTAGGCGCCGGCACACACAGCCCCGGGCCCCGGGCCGCCCCGGGCCGGCGGCCGCCGGCGCCGGCACACCGGCACAGCCGTACCGGCACAGTAGTACCGGCCGGCCGGCACACCGGCACACCGGGTACACACCGGGGCGCACACACAGGCGGGCGCCGGGCCCCGGGCCGTACCGGGCCGCCGGCGGCCCACAGGCGCCGGCACAGTACCGGCACACACAGTAGCCCACACACAGGCGGGCGGTAGCCGGCGCACACACACACAGTAGGCGCACAGCCGCCCACACACACCGGCCGGCCGGCACAGGCGGGCGGGCGCACACACACCGGCACAGTAGTAGGCGGCCGGCGCACAGCC";
    const k = 10;
    console.log(`text size: ${text.length}`);
    const d = 2;
    const freq = freqWordsMistaches(text, k, d);
    const expAns = "GCACACAGAC GCGCACACAC";
    const test = expAns.split(" ");
    expect(freq.size).toBe(2);
    test.forEach((s) => freq.delete(s));
    // if they match (in any order) => freq has size 0
    expect(freq.size).toBe(0);
  });

  test("Rosalind submit Dataset", () => {
    const text =
      "GCATCTCAGGCATCTCAGTTTTTCGTCCGCCGTAACCCTCTTGATTGCTATACCGCCGTAACTTTTTCGTTTGCTATATTTTTCGTCCGCCGTAACCCGCCGTAACCCTCTTGACCGCCGTAACGCATCTCAGCCGCCGTAACCCTCTTGACCTCTTGATTGCTATACCGCCGTAACCCTCTTGATTTTTCGTCCTCTTGACCGCCGTAACCCGCCGTAACCCGCCGTAACTTTTTCGTCCTCTTGATTGCTATATTGCTATATTTTTCGTCCGCCGTAACCCGCCGTAACTTGCTATACCGCCGTAACTTTTTCGTCCTCTTGATTGCTATACCGCCGTAACCCGCCGTAACTTGCTATAGCATCTCAGTTGCTATACCTCTTGATTTTTCGTGCATCTCAGGCATCTCAGCCTCTTGATTGCTATATTTTTCGTCCGCCGTAACCCTCTTGACCGCCGTAACGCATCTCAGCCTCTTGACCTCTTGAGCATCTCAGGCATCTCAGCCTCTTGACCTCTTGATTTTTCGTCCTCTTGAGCATCTCAGTTTTTCGTGCATCTCAGCCTCTTGACCTCTTGAGCATCTCAGGCATCTCAGCCGCCGTAACCCGCCGTAACTTTTTCGTCCTCTTGACCGCCGTAACTTTTTCGTCCTCTTGACCTCTTGAGCATCTCAGGCATCTCAGTTGCTATATTGCTATAGCATCTCAGCCGCCGTAACTTGCTATATTTTTCGTTTGCTATATTGCTATAGCATCTCAGCCTCTTGAGCATCTCAGTTGCTATACCTCTTGATTTTTCGTCCTCTTGACCGCCGTAACCCGCCGTAACTTGCTATACCGCCGTAACTTGCTATATTGCTATAGCATCTCAGCCTCTTGAGCATCTCAGCCGCCGTAACGCATCTCAGTTGCTATA";
    const k = 6;
    const d = 2;
    const freq = freqWordsMistaches(text, k, d);
    const ans = [...freq.keys()].toString().replace(/,/g, " ");
    // console.log(ans);
    const expAns = "ATCTTC";
    expect(freq.size).toBe(1);
    const test = expAns.split(" ");
    test.forEach((s) => freq.delete(s));
    // if they match (in any order) => freq has size 0
    expect(freq.size).toBe(0);
  });
});
